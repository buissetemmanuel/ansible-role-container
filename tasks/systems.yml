---

# Persistent DBUS session
- name: "{{ container_mode }} | systems | check if user is lingering"
  become: true
  stat:
    path: "/var/lib/systemd/linger/{{ container_user_owner_service }}"
  register: user_owner_service_lingering

- name: "{{ container_mode }} | systems | enable lingering is needed"
  when: not user_owner_service_lingering.stat.exists and container_state == 'present'
  become: true
  command: "loginctl enable-linger {{ container_user_owner_service }}"

- name: "{{ container_mode }} | systems | disable lingering is needed"
  when: container_state == 'absent'
  become: true
  command: "loginctl disable-linger {{ container_user_owner_service }}"

- name: "{{ container_mode }} | systems | create /etc/systemd/system/user@.service.d folder"
  become: true
  ansible.builtin.file:
    path: "/etc/systemd/system/user@.service.d"
    state: "{{ container_directories_state }}"
    owner: root
    group: root
    mode: "{{ container_files_mode }}"

- name: "{{ container_mode }} | systems | copy delegate.conf file"
  when: container_state == 'present'
  become: true
  ansible.builtin.copy:
    src: delegate.conf
    dest: "/etc/systemd/system/user@.service.d/delegate.conf"
    owner: root
    group: root
    mode: "{{ container_files_mode }}"

- name: "{{ container_mode }} | systems | daemon-reload"
  when: container_state == 'present'
  become: true
  ansible.builtin.systemd:
    daemon_reload: true
